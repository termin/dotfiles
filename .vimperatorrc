" for Vimperator 3.1 on Mac
" ----- ToDo -----
" はてなブックマーク拡張のコメント表示, ブクマ追加キーが上手く設定できない. ブクマ追加に<S-c>などを割り当ててもcでブクマ追加されてしまう. 拡張の方の設定では上手く割り当てられてる.

" ----- Notice -----

" Loading

" バージョンチェックのon/off
" set! extensions.checkCompatibility.4.0=true

" ----- Main options -----
set runtimepath=/Users/termin/.vimperator
source! /Users/termin/.vimperatorrc.local

set toolbars=menu,tabs,nonavigation,nobookmarks,noaddons
"scrollbars,tabnumbers

" デフォルトで使用するサーチエンジンを指定. ブックマークキーワードの設定に準ずる.
set defsearch=g
" ブラウザタイトルの変更
" set titlestring=vimp
"補完時のサジェストに使用するサーチエンジンを設定0
"set suggestengines=g
" ページ全体で検索語を強調表示
set hlsearch
" 検索語の大文字小文字を無視
" set ignorecase

" hint
" 『Vimperator 3のヒントモードでアルファベットを使う - アインシュタインの電話番号☎』 http://d.hatena.ne.jp/ruedap/20110327/vimperator3_hint_mode_alphabet_uppercase
" hintcharsの1文字目は無視される仕様
set hintchars="HJKLASDFGYUIOPQWERTNMZXCVB"
" 新しいタブで開く
set newtab=all

set focuscontent

set complete=slS
" リンク先の表示位置
set showstatuslinks=2
"Awesomebarの補完対象にBookmarkletを追加、件数を50件に変更
set! browser.urlbar.filter.javascript=false
" set! browser.urlbar.maxRichResults=50 

" ロケーションバーで表示する項目. vimpのcompleteオプションで"l"を選択すると本項が関連する.
"0＝両方検索
"1＝履歴のみ検索
"2＝ブックマークのみ検索
set! browser.urlbar.default.behavior=2

"set sanitizeitems=
" デフォルトのプライベート情報除去期間を"全ての期間"にする.
"set sanitizetimespan=0

" set verbose=15

" ---- Style Options ----
" [tab]open等で長いタイトルがURIに被らない様に補完リストの結果欄(左側)を調整 (れとれとさんちより)
" よくわからない
"hi CompResult width: 45%; overflow: hidden; max-width: 60%;

" colorscheme vimplight
" colorscheme vimpwhite
colorscheme indigo

" ビープ音を鳴らさずビジュアルベルを使用
set visualbell
" ビジュアルベルを無効化
hi Bell display: none;

" ----- Key Mappings -----
" 今は適当に割り当てているだけだけど, その内出来るところは整理したい. → 永遠にしない事が分かった

let mapleader = ","

" 最低限のスタイルシートで表示.invは反転.
noremap ! :set invusermode<CR>

"" tab
nnoremap h <C-p>
nnoremap l <C-n>
" <S-M-Left>/<S-M-Right>で現在のタブの位置変更
noremap <S-M-Left>  :tabmove! -1<CR>:echo "うごうご・・・！"<CR>
noremap <S-M-Right> :tabmove! +1<CR>:echo "うごうご・・・！"<CR>

" map <A-Up> gu

nnoremap <silent> <Esc><Esc> :nohlsearch<CR>

" <M-f>でvimpによる検索/
noremap <M-f> /
" d キーでも直前にフォーカスしていたタブに戻る様にする
noremap <C-w> <M-w>
nmap d <C-w>
" undo一覧から開く
noremap U :undo<Space>
" noremap <Leader>s :saveas<CR>
nnoremap <Leader>h :history!<Space>
" .vimperatorrcをリロード.
nnoremap <Leader>r :mapc<CR>:cmapc<CR>:imapc<CR>:comclear<CR>:so ~/.vimperatorrc<CR>

" <M-c>が上手く動かない時がある気がするのでお試し
nnoremap <M-c> Y

" 誤爆防止
" <M-k>でgoogle.co.jp/firefoxに飛ぶのを防止
noremap <M-k> <Nop>
noremap <M-l> <Nop>
noremap <M-o> <Nop>
nnoremap w <Nop>

" qmarks
" silent qmark h http://www.hatena.ne.jp/termin2/
" silent qmark e http://www.tumblr.com/tumblelog/termin
" silent qmark t http://twitter.com/
" silent qmark f http://favstar.fm/users/termin/recent
" silent qmark l http://reader.livedoor.com/
" silent qmark m https://mail.google.com/mail/?hl=ja&shva=1#inbox
" silent qmark b http://b.hatena.ne.jp/termin2/
" silent qmark s http://s.hatena.ne.jp/termin2/report
" silent qmark d http://www.tumblr.com/dashboard
" silent qmark y http://twitter.com/termin
" silent qmark L http://twitter.com/#!/termin/lists
" silent qmark v http://tv.yahoo.co.jp/listings/realtime/
" silent qmark F http://favstar.fm/users/broiddot/recent
" silent qmark V http://voyurl.com/member/me

" ----- Plugin Options  -----
" let g:plugin_loader_roots = "~/vimperator-plugins/ ~/vimperator-plugins_more/"
let g:plugin_loader_roots = "~/vimperator-plugins/"
let g:plugin_loader_plugins = "_libly,bitly,copy,exopen,feedSomeKeys_3,google-translator,googlekanji,imageextender,ldrize_cooperation,lo,multi_requester,nextlink,pluginManager,removetabs,sl,stella,tabsort,toggler,walk-input,yetmappings,zip-de-download,reporter,sbmcommentsviewer,cookieManager,edit-vimperator-files,migemo_hint,statusline-toolbar,prevent-pseudo-domain"

" google-translator.js
nnoremap <Leader>gt :gtrans<Space>

" nextlink.js
" let g:nextlink_followlink = "true"
" let g:nextlink_nositeinfo_act = "f"
" f Vimperatorの"[[", "]]"の動作
" e マッチするSITEINFOが無いことを知らせる(デフォルト設定)
" n 何もしない
let g:nextlink_prevmap = "K"
let g:nextlink_nextmap = "J"

" twittperator.js
" ChirpUserStreamを使う
" let g:twittperator_use_chirp = 1
" コマンドラインにtweetを自動的に表示
" let g:twittperator_plugin_echo_tweet = 0
" reply_popup_alert
" let g:twittperator_plugin_reply_popup_alert = 1
" let g:twittperator_plugin_reply_popup_alert_username = "termin"

" copy.js
noremap <M-S-c> :copy tw<CR>
js <<EOM
liberator.globalVariables.copy_templates = [
  { label: 'titleAndURL',    value: '%TITLE%\n%URL%' },
  { label: 'tw',			 value: '『%TITLE%』\n%URL%' },
  { label: 'title',          value: '%TITLE%', map: ',y' },
  { label: 'anchor',         value: '<a href="%URL%">%TITLE%</a>' },
  { label: 'selanchor',      value: '<a href="%URL%" title="%TITLE%">%SEL%</a>' },
  { label: 'htmlblockquote', value: '<blockquote cite="%URL%" title="%TITLE%">%HTMLSEL%</blockquote>' },
  { label: 'hatena',		 value: '[%URL%:title]'},
  { label: 'hatenawithtitle',value: '%URL%:title=%TITLE%'},
  { label: 'ASIN',   value: 'copy ASIN code from Amazon', custom: function(){return content.document.getElementById('ASIN').value;} }
];
EOM

" stella.js
js <<EOM
function addLocalMappings(buffer, maps) {
  maps.forEach(
    function (map) {
      let [cmd, action, extra] = map;
      let actionFunc = action;
      extra || (extra = {});

      if (typeof action == "string") {
        if (action.charAt(0) == ':')
          actionFunc = extra.open ? function () commandline.open("", action, modes.EX)
                                  : function () liberator.execute(action);
        else
          actionFunc = function () events.feedkeys(action, extra.noremap, true);
      }
      extra.matchingUrls = buffer;
      mappings.addUserMap(
        [modes.NORMAL],
        [cmd],
        "Local mapping for " + buffer,
        actionFunc,
        extra
      );
    }
  );
}

addLocalMappings(
  /^(http:\/\/(es|www).nicovideo.jp\/(watch|playlist\/mylist)|http:\/\/(jp|www)\.youtube\.com\/watch|http:\/\/(www\.)?vimeo\.com\/(channels\/(hd)?#)?\d+)/,
  [
	['p',			':stplay',					],
	['m',			':stmute',					],
	['v',			':stcomment',				],
	['s',			':stseek! +10',				],
	['S',			':stseek! -10',				],
	['z',			':stlarge',					],
	['<Leader>d',	':stfetch',					],
	['Q',			':stquality ',	{open: true}],
  ]
);
EOM

" feedSomekeys_3.js
command! -nargs=+ lazy autocmd VimperatorEnter .* <args>
" Gmail
lazy fmaps -u='mail\.google\.com/mail' -events=vkeydown,keypress,vkeyup j k
lazy fmaps -u='^https?://mail\.google\.com/(mail|a)/' c / n p o u e x s r a # [ ] z ? gi gs gt gd ga gc gb
" Livedoor Reader
lazy fmaps -u='^http://(reader\.livedoor|fastladder)\.com/reader/' j k s a p o v c z r f J K < > <Space> <S-Space> <Del> g G,u
" LDR Full Feed Key Settings
" g = "load current entry" G,u = "load all entries"
" RememberTheMilk
lazy fmaps -u='^https?://www\.rememberthemilk\.com/home/' j k m i n a x c t r d s ? d F,f G,g L,l Y,y H,h M,m z <Del> 0 1 2 3 4
" Tumblr (use : ReblogCommand, TumblrTagCommand)
lazy fmaps -u='^http://[^\./]*\.tumblr\.com/' i,t e,tk n,h
" はてなブックマーク
lazy fmaps -u='^http://b\.hatena\.ne\.jp/(?!(entry|articles|guide))' j k o e B,b
" Google Calendar
" lazy fmaps -u='^http://www\.google\.com/calendar/' -events=keydown j k t a d w m x c e <Del> / + q s ?
" New Twitter
" lazy fmaps -u='^http://twitter.\com/#!' j k f <Space> ? .

" removetabs.js
" 左側にあるタブを閉じる
noremap <C-S-Left> :removetabsleft
" 右側にあるタブを閉じる
noremap <C-S-Right> :removetabsright
" tabsort.js
" command! urlsort tabsort -t=url

" multi_requester.js
noremap <Leader>mf :mr<Space>favotter-new<Space>termin<CR>
" noremap <Leader>my :mr<Space>twitter-user<Space>termin<CR>

" toggler.js
js <<EOM
liberator.globalVariables.toggler = {
  //  name: [ setting commands ]],
  // ツールバー
  tb: ["set gui=nonavigation", "set gui=navigation"],
  fs: ["set nofs","set fs"],
  // タブバー
  //tab:["set gui=tabs", "set gui=notabs"],
  // サイドバー
  // sb: ["sbclose","sbar Console"],
};
EOM

noremap <F2> :toggle tb<CR>
" noremap <F3> :toggle fs<CR>
noremap <Leader>1 :set toolbars=menu,tabs,navigation,nobookmarks,noaddons<CR>
noremap <Leader>2 :set toolbars=menu,tabs,nonavigation,nobookmarks,addons<CR>
" travian のみでツールバーを表示する
" autocmd LocationChange .* set go=rb
" autocmd LocationChange ^http://s4.travian.jp/ set go=rbT

" statusline-toolbar.js
" set statuslinetoolbars=feed-button,voyurl-button,voyurl-button-no
lazy set statuslinetoolbars=feed-button

" はてなブックマーク拡張( http://subtech.g.hatena.ne.jp/secondlife/20090402/1238655382 )
javascript if (typeof hBookmark != 'undefined') liberator.loadScript('chrome://hatenabookmark/content/vimperator/plugin/hatenabookmark.js', {__proto__: this});
javascript <<EOF
// キーボードショートカットの指定
// 空(null)を指定すれば hints や nnoremap を上書きしなくなる
liberator.globalVariables.hBookmark_shortcuts = {
	hintsAdd     : 'c',
	hintsComment : 'C',
	add          : ['<S-v>'],
	comment      : ['<S-c>'],
};
// コマンドの設定
// 検索時の wait(ms)
// liberator.globalVariables.hBookmark_search_interval = 1000;
// 一度に検索する limit
// liberator.globalVariables.hBookmark_search_limit = 10;
// 検索時の表示の最大件数. この件数に達するまで検索し続ける.
// liberator.globalVariables.hBookmark_search_max_limit = 100;
EOF

" entry_pageを表示する( exopen.js )
javascript <<EOM
liberator.globalVariables.exopen_templates = [
{
  label: 'hatenaep',
  value: 'http://b.hatena.ne.jp/entry/%URL%',
  description: 'open hatena bookmark entrypage',
  newtab: true
}];
EOM
noremap <S-x> :exopen hatenaep<CR>

" sbmcommentsviewer.js
let g:def_sbms = "hdt"
nnoremap <Leader>vc :viewSBMComments -t t<CR>

" はてブ検索(はてなブックマーク拡張)
noremap c :hbt<Space>
" コメントのみ対象
" noremap <Leader>cc :hbtc<Space>
" titleのみ対象
" noremap <C-t> :hbtti<Space>
" urlのみ対象
noremap <Leader>cu :hbtu<Space>

" ldrize_cooperation.js
let g:ldrc_captureMappings = "['j','k','p','o','?']"

" autopagerize_control.js
" let g:autopagerize_prevmap = "K" 
" let g:autopagerize_nextmap = "J"

" lo.js
noremap <S-C-f> :fo<Space>
noremap <S-C-l> :lo<Space>

" zip-de-download
let g:zipDownloadDir = "~/Desktop"
noremap <S-C-z> :zipdownload -auto-detect jpg

" ----- Others -----
" voyurl
command -nargs=0 voy emenu ツール.VoyUrl Pref..Authenticate
noremap <Leader>va :voy<CR>

" LDRize patch
" 『Firefox 4.0b10でGreasemonkey 0.9.1のユーザスクリプトのwindowを共通にする改造（開発者orVimper向け） - wltの日記』
" http://d.hatena.ne.jp/wlt/20110130/1296359063
" Greasemonkey 0.9.1でwindowを共通にする.
js <<EOM
autocommands.add('VimperatorEnter', '.*',
		function() {
		let gm = Components.classes['@greasemonkey.mozdev.org/greasemonkey-service;1'];
		if (gm) {
		gm = gm.getService().wrappedJSObject;
		if (gm.injectScripts.toSource().search('sharedWindow') == -1) {
		gm.injectScripts = liberator.eval(
			gm.injectScripts.toSource()
			.replace(/(?=var firebugConsole)/,
				'var sharedWindow = {};' +
				'sharedWindow.window = sharedWindow;' +
				'sharedWindow.__proto__ = new XPCNativeWrapper(unsafeContentWin);')
			.replace(/(?=sandbox\.__proto__)/, ' sandbox.window = sharedWindow;'),
			gm.injectScripts);
		}
		}
		});
EOM

" yourfilehost cookie削除
" cf.http://anond.hatelabo.jp/20100108213648
" js <<EOM
" commands.addUserCommand(
"   ['removeCookieOfYourfile'],
"   'removeCookieOfYourfile',
"   function() {
"     liberator.execute('cookiemanager remove yourfilehostdatabase.com/');
"     liberator.execute('cookiemanager remove yourfilehost.com/');
"     liberator.execute('cookiemanager remove yourlifehost.jp/');
"         }
" );
" EOM

" set editor=''
" コマンドラインを外部エディタで編集
" cf. http://vimperator.g.hatena.ne.jp/nokturnalmortum/20100304/1267718311
" mappings.addUserMap(
		" [modes.COMMAND_LINE],
		" ['<C-i>'],
		" 'Edit commandline by external editor',
		" function () {
		" io.withTempFiles(
			" function (file) {
			" file.write(commandline.command);
			" editor.editFileExternally(file.path);
			" commandline.open(":", file.read(), modes.EX);
			" return true;
			" }
		" );
	" }
" );

" echo "ギギギ…"

" vim: set ft=vimperator:
